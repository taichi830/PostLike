
name: Create tag & release

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  tag_release: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract version
        run: |
             echo '${{ github.event.pull_request.head.ref }}' | sed 's/release\///'
             VERSION=$(echo ${{ github.event.pull_request.head.ref }} | sed "s/release\///")
             echo ::set-output name=version::$VERSION
        id: extract_version
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_API_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false
  
  submit:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup SSH Keys and known_hosts for fastlane match
      run: |
        SSH_PATH="$HOME/.ssh"

        mkdir -p "$SSH_PATH"
        touch "$SSH_PATH/known_hosts"

        echo "$PRIVATE_KEY" > "$SSH_PATH/id_rsa"

        chmod 700 "$SSH_PATH"
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        chmod 600 "$SSH_PATH/known_hosts"
        chmod 600 "$SSH_PATH/id_rsa"

        eval $(ssh-agent)
        ssh-add "$SSH_PATH/id_rsa"
    - name: release app
      run: |
        bundle install
        bundle exec fastlane release_to_appstore
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

  
  
  
  
  
  
  
  
          
          
          
